How to Use Pygame Masks for Pixel Perfect Collision
https://www.youtube.com/watch?v=tJiKYMQJnYg

What is a Mask?
A mask(mask of a surface) is basically like a filter layer which lets you do operations on specific parts of a surface, of which details are stored in the mask.
you want to color only the stars and leave everything else blank. A mask is like having a special stencil that only lets the crayons color the stars while blocking all other areas. It tells the computer exactly which parts of the picture to "show" or "hide."
You probably seen em Rangoli Stencils:
https://printbharat.com/products/plastic-jali-rangoli-stencils-for-making-rangoli

Here pygame.Mask uses the alpha layer of a surface to create a pixel-perfect mask, allowing for precise collision detection and other pixel-based operations. 


.Surface(): https://www.pygame.org/docs/ref/surface.html#pygame.Surface.get_rect
pygame object for representing images
Surface((width, height), flags=0, depth=0, masks=None) -> Surface
Surface((width, height), flags=0, Surface) -> Surface

pygame.mouse
https://www.pygame.org/docs/ref/mouse.html

Load the Image, get the rectangle from the image and form a mask from surface
Then Project the mask to_surface()

COLLISION DETECTION -> pygame.mask.overlap()
if subject_mask.overlap(glow_mask, (mouse_coords[0], mouse_coords[1])):
        col = RED
    else:
        col = GREEN
It tells the function where the second mask is located in relation to the first mask, enabling it to accurately determine if they overlap at those coordinates.